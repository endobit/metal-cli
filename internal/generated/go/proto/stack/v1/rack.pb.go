// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        (unknown)
// source: proto/stack/v1/rack.proto

package stackv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateRackRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Zone        *string                `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateRackRequest) Reset() {
	*x = CreateRackRequest{}
	mi := &file_proto_stack_v1_rack_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRackRequest) ProtoMessage() {}

func (x *CreateRackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stack_v1_rack_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateRackRequest) GetZone() string {
	if x != nil {
		if x.xxx_hidden_Zone != nil {
			return *x.xxx_hidden_Zone
		}
		return ""
	}
	return ""
}

func (x *CreateRackRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateRackRequest) SetZone(v string) {
	x.xxx_hidden_Zone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *CreateRackRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *CreateRackRequest) HasZone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateRackRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateRackRequest) ClearZone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Zone = nil
}

func (x *CreateRackRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type CreateRackRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Zone *string
	Name *string
}

func (b0 CreateRackRequest_builder) Build() *CreateRackRequest {
	m0 := &CreateRackRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Zone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Zone = b.Zone
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type ReadRacksRequest struct {
	state                  protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Zone        *string                 `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
	xxx_hidden_Rack        isReadRacksRequest_Rack `protobuf_oneof:"rack"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ReadRacksRequest) Reset() {
	*x = ReadRacksRequest{}
	mi := &file_proto_stack_v1_rack_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRacksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRacksRequest) ProtoMessage() {}

func (x *ReadRacksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stack_v1_rack_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadRacksRequest) GetZone() string {
	if x != nil {
		if x.xxx_hidden_Zone != nil {
			return *x.xxx_hidden_Zone
		}
		return ""
	}
	return ""
}

func (x *ReadRacksRequest) GetName() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Rack.(*readRacksRequest_Name); ok {
			return x.Name
		}
	}
	return ""
}

func (x *ReadRacksRequest) GetGlob() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Rack.(*readRacksRequest_Glob); ok {
			return x.Glob
		}
	}
	return ""
}

func (x *ReadRacksRequest) SetZone(v string) {
	x.xxx_hidden_Zone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ReadRacksRequest) SetName(v string) {
	x.xxx_hidden_Rack = &readRacksRequest_Name{v}
}

func (x *ReadRacksRequest) SetGlob(v string) {
	x.xxx_hidden_Rack = &readRacksRequest_Glob{v}
}

func (x *ReadRacksRequest) HasZone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ReadRacksRequest) HasRack() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Rack != nil
}

func (x *ReadRacksRequest) HasName() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Rack.(*readRacksRequest_Name)
	return ok
}

func (x *ReadRacksRequest) HasGlob() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Rack.(*readRacksRequest_Glob)
	return ok
}

func (x *ReadRacksRequest) ClearZone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Zone = nil
}

func (x *ReadRacksRequest) ClearRack() {
	x.xxx_hidden_Rack = nil
}

func (x *ReadRacksRequest) ClearName() {
	if _, ok := x.xxx_hidden_Rack.(*readRacksRequest_Name); ok {
		x.xxx_hidden_Rack = nil
	}
}

func (x *ReadRacksRequest) ClearGlob() {
	if _, ok := x.xxx_hidden_Rack.(*readRacksRequest_Glob); ok {
		x.xxx_hidden_Rack = nil
	}
}

const ReadRacksRequest_Rack_not_set_case case_ReadRacksRequest_Rack = 0
const ReadRacksRequest_Name_case case_ReadRacksRequest_Rack = 2
const ReadRacksRequest_Glob_case case_ReadRacksRequest_Rack = 3

func (x *ReadRacksRequest) WhichRack() case_ReadRacksRequest_Rack {
	if x == nil {
		return ReadRacksRequest_Rack_not_set_case
	}
	switch x.xxx_hidden_Rack.(type) {
	case *readRacksRequest_Name:
		return ReadRacksRequest_Name_case
	case *readRacksRequest_Glob:
		return ReadRacksRequest_Glob_case
	default:
		return ReadRacksRequest_Rack_not_set_case
	}
}

type ReadRacksRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Zone *string
	// Fields of oneof xxx_hidden_Rack:
	Name *string
	Glob *string
	// -- end of xxx_hidden_Rack
}

func (b0 ReadRacksRequest_builder) Build() *ReadRacksRequest {
	m0 := &ReadRacksRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Zone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Zone = b.Zone
	}
	if b.Name != nil {
		x.xxx_hidden_Rack = &readRacksRequest_Name{*b.Name}
	}
	if b.Glob != nil {
		x.xxx_hidden_Rack = &readRacksRequest_Glob{*b.Glob}
	}
	return m0
}

type case_ReadRacksRequest_Rack protoreflect.FieldNumber

func (x case_ReadRacksRequest_Rack) String() string {
	md := file_proto_stack_v1_rack_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isReadRacksRequest_Rack interface {
	isReadRacksRequest_Rack()
}

type readRacksRequest_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,oneof"`
}

type readRacksRequest_Glob struct {
	Glob string `protobuf:"bytes,3,opt,name=glob,oneof"`
}

func (*readRacksRequest_Name) isReadRacksRequest_Rack() {}

func (*readRacksRequest_Glob) isReadRacksRequest_Rack() {}

type ReadRacksResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Zone        *string                `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ReadRacksResponse) Reset() {
	*x = ReadRacksResponse{}
	mi := &file_proto_stack_v1_rack_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRacksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRacksResponse) ProtoMessage() {}

func (x *ReadRacksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stack_v1_rack_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadRacksResponse) GetZone() string {
	if x != nil {
		if x.xxx_hidden_Zone != nil {
			return *x.xxx_hidden_Zone
		}
		return ""
	}
	return ""
}

func (x *ReadRacksResponse) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ReadRacksResponse) SetZone(v string) {
	x.xxx_hidden_Zone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ReadRacksResponse) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ReadRacksResponse) HasZone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ReadRacksResponse) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ReadRacksResponse) ClearZone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Zone = nil
}

func (x *ReadRacksResponse) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type ReadRacksResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Zone *string
	Name *string
}

func (b0 ReadRacksResponse_builder) Build() *ReadRacksResponse {
	m0 := &ReadRacksResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Zone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Zone = b.Zone
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type UpdateRackRequest struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Zone        *string                   `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
	xxx_hidden_Name        *string                   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	xxx_hidden_Fields      *UpdateRackRequest_Fields `protobuf:"bytes,3,opt,name=fields" json:"fields,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateRackRequest) Reset() {
	*x = UpdateRackRequest{}
	mi := &file_proto_stack_v1_rack_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRackRequest) ProtoMessage() {}

func (x *UpdateRackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stack_v1_rack_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateRackRequest) GetZone() string {
	if x != nil {
		if x.xxx_hidden_Zone != nil {
			return *x.xxx_hidden_Zone
		}
		return ""
	}
	return ""
}

func (x *UpdateRackRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateRackRequest) GetFields() *UpdateRackRequest_Fields {
	if x != nil {
		return x.xxx_hidden_Fields
	}
	return nil
}

func (x *UpdateRackRequest) SetZone(v string) {
	x.xxx_hidden_Zone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *UpdateRackRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *UpdateRackRequest) SetFields(v *UpdateRackRequest_Fields) {
	x.xxx_hidden_Fields = v
}

func (x *UpdateRackRequest) HasZone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateRackRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateRackRequest) HasFields() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Fields != nil
}

func (x *UpdateRackRequest) ClearZone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Zone = nil
}

func (x *UpdateRackRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *UpdateRackRequest) ClearFields() {
	x.xxx_hidden_Fields = nil
}

type UpdateRackRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Zone   *string
	Name   *string
	Fields *UpdateRackRequest_Fields
}

func (b0 UpdateRackRequest_builder) Build() *UpdateRackRequest {
	m0 := &UpdateRackRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Zone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Zone = b.Zone
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Fields = b.Fields
	return m0
}

type DeleteRacksRequest struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Zone        *string                   `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
	xxx_hidden_Rack        isDeleteRacksRequest_Rack `protobuf_oneof:"rack"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteRacksRequest) Reset() {
	*x = DeleteRacksRequest{}
	mi := &file_proto_stack_v1_rack_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRacksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRacksRequest) ProtoMessage() {}

func (x *DeleteRacksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stack_v1_rack_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteRacksRequest) GetZone() string {
	if x != nil {
		if x.xxx_hidden_Zone != nil {
			return *x.xxx_hidden_Zone
		}
		return ""
	}
	return ""
}

func (x *DeleteRacksRequest) GetName() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Rack.(*deleteRacksRequest_Name); ok {
			return x.Name
		}
	}
	return ""
}

func (x *DeleteRacksRequest) GetGlob() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Rack.(*deleteRacksRequest_Glob); ok {
			return x.Glob
		}
	}
	return ""
}

func (x *DeleteRacksRequest) SetZone(v string) {
	x.xxx_hidden_Zone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DeleteRacksRequest) SetName(v string) {
	x.xxx_hidden_Rack = &deleteRacksRequest_Name{v}
}

func (x *DeleteRacksRequest) SetGlob(v string) {
	x.xxx_hidden_Rack = &deleteRacksRequest_Glob{v}
}

func (x *DeleteRacksRequest) HasZone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteRacksRequest) HasRack() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Rack != nil
}

func (x *DeleteRacksRequest) HasName() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Rack.(*deleteRacksRequest_Name)
	return ok
}

func (x *DeleteRacksRequest) HasGlob() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Rack.(*deleteRacksRequest_Glob)
	return ok
}

func (x *DeleteRacksRequest) ClearZone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Zone = nil
}

func (x *DeleteRacksRequest) ClearRack() {
	x.xxx_hidden_Rack = nil
}

func (x *DeleteRacksRequest) ClearName() {
	if _, ok := x.xxx_hidden_Rack.(*deleteRacksRequest_Name); ok {
		x.xxx_hidden_Rack = nil
	}
}

func (x *DeleteRacksRequest) ClearGlob() {
	if _, ok := x.xxx_hidden_Rack.(*deleteRacksRequest_Glob); ok {
		x.xxx_hidden_Rack = nil
	}
}

const DeleteRacksRequest_Rack_not_set_case case_DeleteRacksRequest_Rack = 0
const DeleteRacksRequest_Name_case case_DeleteRacksRequest_Rack = 2
const DeleteRacksRequest_Glob_case case_DeleteRacksRequest_Rack = 3

func (x *DeleteRacksRequest) WhichRack() case_DeleteRacksRequest_Rack {
	if x == nil {
		return DeleteRacksRequest_Rack_not_set_case
	}
	switch x.xxx_hidden_Rack.(type) {
	case *deleteRacksRequest_Name:
		return DeleteRacksRequest_Name_case
	case *deleteRacksRequest_Glob:
		return DeleteRacksRequest_Glob_case
	default:
		return DeleteRacksRequest_Rack_not_set_case
	}
}

type DeleteRacksRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Zone *string
	// Fields of oneof xxx_hidden_Rack:
	Name *string
	Glob *string
	// -- end of xxx_hidden_Rack
}

func (b0 DeleteRacksRequest_builder) Build() *DeleteRacksRequest {
	m0 := &DeleteRacksRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Zone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Zone = b.Zone
	}
	if b.Name != nil {
		x.xxx_hidden_Rack = &deleteRacksRequest_Name{*b.Name}
	}
	if b.Glob != nil {
		x.xxx_hidden_Rack = &deleteRacksRequest_Glob{*b.Glob}
	}
	return m0
}

type case_DeleteRacksRequest_Rack protoreflect.FieldNumber

func (x case_DeleteRacksRequest_Rack) String() string {
	md := file_proto_stack_v1_rack_proto_msgTypes[4].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isDeleteRacksRequest_Rack interface {
	isDeleteRacksRequest_Rack()
}

type deleteRacksRequest_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,oneof"`
}

type deleteRacksRequest_Glob struct {
	Glob string `protobuf:"bytes,3,opt,name=glob,oneof"`
}

func (*deleteRacksRequest_Name) isDeleteRacksRequest_Rack() {}

func (*deleteRacksRequest_Glob) isDeleteRacksRequest_Rack() {}

type CreateRackAttrRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Zone        *string                `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
	xxx_hidden_Rack        *string                `protobuf:"bytes,2,opt,name=rack" json:"rack,omitempty"`
	xxx_hidden_Name        *string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateRackAttrRequest) Reset() {
	*x = CreateRackAttrRequest{}
	mi := &file_proto_stack_v1_rack_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRackAttrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRackAttrRequest) ProtoMessage() {}

func (x *CreateRackAttrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stack_v1_rack_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateRackAttrRequest) GetZone() string {
	if x != nil {
		if x.xxx_hidden_Zone != nil {
			return *x.xxx_hidden_Zone
		}
		return ""
	}
	return ""
}

func (x *CreateRackAttrRequest) GetRack() string {
	if x != nil {
		if x.xxx_hidden_Rack != nil {
			return *x.xxx_hidden_Rack
		}
		return ""
	}
	return ""
}

func (x *CreateRackAttrRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *CreateRackAttrRequest) SetZone(v string) {
	x.xxx_hidden_Zone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *CreateRackAttrRequest) SetRack(v string) {
	x.xxx_hidden_Rack = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *CreateRackAttrRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *CreateRackAttrRequest) HasZone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CreateRackAttrRequest) HasRack() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateRackAttrRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateRackAttrRequest) ClearZone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Zone = nil
}

func (x *CreateRackAttrRequest) ClearRack() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Rack = nil
}

func (x *CreateRackAttrRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

type CreateRackAttrRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Zone *string
	Rack *string
	Name *string
}

func (b0 CreateRackAttrRequest_builder) Build() *CreateRackAttrRequest {
	m0 := &CreateRackAttrRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Zone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Zone = b.Zone
	}
	if b.Rack != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Rack = b.Rack
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type ReadRackAttrsRequest struct {
	state                  protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_Zone        *string                     `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
	xxx_hidden_Rack        *string                     `protobuf:"bytes,2,opt,name=rack" json:"rack,omitempty"`
	xxx_hidden_Attr        isReadRackAttrsRequest_Attr `protobuf_oneof:"attr"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ReadRackAttrsRequest) Reset() {
	*x = ReadRackAttrsRequest{}
	mi := &file_proto_stack_v1_rack_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRackAttrsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRackAttrsRequest) ProtoMessage() {}

func (x *ReadRackAttrsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stack_v1_rack_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadRackAttrsRequest) GetZone() string {
	if x != nil {
		if x.xxx_hidden_Zone != nil {
			return *x.xxx_hidden_Zone
		}
		return ""
	}
	return ""
}

func (x *ReadRackAttrsRequest) GetRack() string {
	if x != nil {
		if x.xxx_hidden_Rack != nil {
			return *x.xxx_hidden_Rack
		}
		return ""
	}
	return ""
}

func (x *ReadRackAttrsRequest) GetName() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Attr.(*readRackAttrsRequest_Name); ok {
			return x.Name
		}
	}
	return ""
}

func (x *ReadRackAttrsRequest) GetGlob() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Attr.(*readRackAttrsRequest_Glob); ok {
			return x.Glob
		}
	}
	return ""
}

func (x *ReadRackAttrsRequest) SetZone(v string) {
	x.xxx_hidden_Zone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ReadRackAttrsRequest) SetRack(v string) {
	x.xxx_hidden_Rack = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ReadRackAttrsRequest) SetName(v string) {
	x.xxx_hidden_Attr = &readRackAttrsRequest_Name{v}
}

func (x *ReadRackAttrsRequest) SetGlob(v string) {
	x.xxx_hidden_Attr = &readRackAttrsRequest_Glob{v}
}

func (x *ReadRackAttrsRequest) HasZone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ReadRackAttrsRequest) HasRack() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ReadRackAttrsRequest) HasAttr() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Attr != nil
}

func (x *ReadRackAttrsRequest) HasName() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Attr.(*readRackAttrsRequest_Name)
	return ok
}

func (x *ReadRackAttrsRequest) HasGlob() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Attr.(*readRackAttrsRequest_Glob)
	return ok
}

func (x *ReadRackAttrsRequest) ClearZone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Zone = nil
}

func (x *ReadRackAttrsRequest) ClearRack() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Rack = nil
}

func (x *ReadRackAttrsRequest) ClearAttr() {
	x.xxx_hidden_Attr = nil
}

func (x *ReadRackAttrsRequest) ClearName() {
	if _, ok := x.xxx_hidden_Attr.(*readRackAttrsRequest_Name); ok {
		x.xxx_hidden_Attr = nil
	}
}

func (x *ReadRackAttrsRequest) ClearGlob() {
	if _, ok := x.xxx_hidden_Attr.(*readRackAttrsRequest_Glob); ok {
		x.xxx_hidden_Attr = nil
	}
}

const ReadRackAttrsRequest_Attr_not_set_case case_ReadRackAttrsRequest_Attr = 0
const ReadRackAttrsRequest_Name_case case_ReadRackAttrsRequest_Attr = 3
const ReadRackAttrsRequest_Glob_case case_ReadRackAttrsRequest_Attr = 4

func (x *ReadRackAttrsRequest) WhichAttr() case_ReadRackAttrsRequest_Attr {
	if x == nil {
		return ReadRackAttrsRequest_Attr_not_set_case
	}
	switch x.xxx_hidden_Attr.(type) {
	case *readRackAttrsRequest_Name:
		return ReadRackAttrsRequest_Name_case
	case *readRackAttrsRequest_Glob:
		return ReadRackAttrsRequest_Glob_case
	default:
		return ReadRackAttrsRequest_Attr_not_set_case
	}
}

type ReadRackAttrsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Zone *string
	Rack *string
	// Fields of oneof xxx_hidden_Attr:
	Name *string
	Glob *string
	// -- end of xxx_hidden_Attr
}

func (b0 ReadRackAttrsRequest_builder) Build() *ReadRackAttrsRequest {
	m0 := &ReadRackAttrsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Zone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Zone = b.Zone
	}
	if b.Rack != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Rack = b.Rack
	}
	if b.Name != nil {
		x.xxx_hidden_Attr = &readRackAttrsRequest_Name{*b.Name}
	}
	if b.Glob != nil {
		x.xxx_hidden_Attr = &readRackAttrsRequest_Glob{*b.Glob}
	}
	return m0
}

type case_ReadRackAttrsRequest_Attr protoreflect.FieldNumber

func (x case_ReadRackAttrsRequest_Attr) String() string {
	md := file_proto_stack_v1_rack_proto_msgTypes[6].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isReadRackAttrsRequest_Attr interface {
	isReadRackAttrsRequest_Attr()
}

type readRackAttrsRequest_Name struct {
	Name string `protobuf:"bytes,3,opt,name=name,oneof"`
}

type readRackAttrsRequest_Glob struct {
	Glob string `protobuf:"bytes,4,opt,name=glob,oneof"`
}

func (*readRackAttrsRequest_Name) isReadRackAttrsRequest_Attr() {}

func (*readRackAttrsRequest_Glob) isReadRackAttrsRequest_Attr() {}

type ReadRackAttrsResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Zone        *string                `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
	xxx_hidden_Rack        *string                `protobuf:"bytes,2,opt,name=rack" json:"rack,omitempty"`
	xxx_hidden_Name        *string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	xxx_hidden_Value       *string                `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	xxx_hidden_Protected   bool                   `protobuf:"varint,5,opt,name=protected" json:"protected,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ReadRackAttrsResponse) Reset() {
	*x = ReadRackAttrsResponse{}
	mi := &file_proto_stack_v1_rack_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRackAttrsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRackAttrsResponse) ProtoMessage() {}

func (x *ReadRackAttrsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stack_v1_rack_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadRackAttrsResponse) GetZone() string {
	if x != nil {
		if x.xxx_hidden_Zone != nil {
			return *x.xxx_hidden_Zone
		}
		return ""
	}
	return ""
}

func (x *ReadRackAttrsResponse) GetRack() string {
	if x != nil {
		if x.xxx_hidden_Rack != nil {
			return *x.xxx_hidden_Rack
		}
		return ""
	}
	return ""
}

func (x *ReadRackAttrsResponse) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ReadRackAttrsResponse) GetValue() string {
	if x != nil {
		if x.xxx_hidden_Value != nil {
			return *x.xxx_hidden_Value
		}
		return ""
	}
	return ""
}

func (x *ReadRackAttrsResponse) GetProtected() bool {
	if x != nil {
		return x.xxx_hidden_Protected
	}
	return false
}

func (x *ReadRackAttrsResponse) SetZone(v string) {
	x.xxx_hidden_Zone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *ReadRackAttrsResponse) SetRack(v string) {
	x.xxx_hidden_Rack = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ReadRackAttrsResponse) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *ReadRackAttrsResponse) SetValue(v string) {
	x.xxx_hidden_Value = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ReadRackAttrsResponse) SetProtected(v bool) {
	x.xxx_hidden_Protected = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *ReadRackAttrsResponse) HasZone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ReadRackAttrsResponse) HasRack() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ReadRackAttrsResponse) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ReadRackAttrsResponse) HasValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ReadRackAttrsResponse) HasProtected() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ReadRackAttrsResponse) ClearZone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Zone = nil
}

func (x *ReadRackAttrsResponse) ClearRack() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Rack = nil
}

func (x *ReadRackAttrsResponse) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *ReadRackAttrsResponse) ClearValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Value = nil
}

func (x *ReadRackAttrsResponse) ClearProtected() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Protected = false
}

type ReadRackAttrsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Zone      *string
	Rack      *string
	Name      *string
	Value     *string
	Protected *bool
}

func (b0 ReadRackAttrsResponse_builder) Build() *ReadRackAttrsResponse {
	m0 := &ReadRackAttrsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Zone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Zone = b.Zone
	}
	if b.Rack != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Rack = b.Rack
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Value = b.Value
	}
	if b.Protected != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Protected = *b.Protected
	}
	return m0
}

type UpdateRackAttrRequest struct {
	state                  protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_Zone        *string                       `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
	xxx_hidden_Rack        *string                       `protobuf:"bytes,2,opt,name=rack" json:"rack,omitempty"`
	xxx_hidden_Name        *string                       `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	xxx_hidden_Fields      *UpdateRackAttrRequest_Fields `protobuf:"bytes,4,opt,name=fields" json:"fields,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateRackAttrRequest) Reset() {
	*x = UpdateRackAttrRequest{}
	mi := &file_proto_stack_v1_rack_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRackAttrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRackAttrRequest) ProtoMessage() {}

func (x *UpdateRackAttrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stack_v1_rack_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateRackAttrRequest) GetZone() string {
	if x != nil {
		if x.xxx_hidden_Zone != nil {
			return *x.xxx_hidden_Zone
		}
		return ""
	}
	return ""
}

func (x *UpdateRackAttrRequest) GetRack() string {
	if x != nil {
		if x.xxx_hidden_Rack != nil {
			return *x.xxx_hidden_Rack
		}
		return ""
	}
	return ""
}

func (x *UpdateRackAttrRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateRackAttrRequest) GetFields() *UpdateRackAttrRequest_Fields {
	if x != nil {
		return x.xxx_hidden_Fields
	}
	return nil
}

func (x *UpdateRackAttrRequest) SetZone(v string) {
	x.xxx_hidden_Zone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *UpdateRackAttrRequest) SetRack(v string) {
	x.xxx_hidden_Rack = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *UpdateRackAttrRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *UpdateRackAttrRequest) SetFields(v *UpdateRackAttrRequest_Fields) {
	x.xxx_hidden_Fields = v
}

func (x *UpdateRackAttrRequest) HasZone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateRackAttrRequest) HasRack() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateRackAttrRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateRackAttrRequest) HasFields() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Fields != nil
}

func (x *UpdateRackAttrRequest) ClearZone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Zone = nil
}

func (x *UpdateRackAttrRequest) ClearRack() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Rack = nil
}

func (x *UpdateRackAttrRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *UpdateRackAttrRequest) ClearFields() {
	x.xxx_hidden_Fields = nil
}

type UpdateRackAttrRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Zone   *string
	Rack   *string
	Name   *string
	Fields *UpdateRackAttrRequest_Fields
}

func (b0 UpdateRackAttrRequest_builder) Build() *UpdateRackAttrRequest {
	m0 := &UpdateRackAttrRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Zone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Zone = b.Zone
	}
	if b.Rack != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Rack = b.Rack
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Fields = b.Fields
	return m0
}

type DeleteRackAttrsRequest struct {
	state                  protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_Zone        *string                       `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
	xxx_hidden_Rack        *string                       `protobuf:"bytes,2,opt,name=rack" json:"rack,omitempty"`
	xxx_hidden_Attr        isDeleteRackAttrsRequest_Attr `protobuf_oneof:"attr"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteRackAttrsRequest) Reset() {
	*x = DeleteRackAttrsRequest{}
	mi := &file_proto_stack_v1_rack_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRackAttrsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRackAttrsRequest) ProtoMessage() {}

func (x *DeleteRackAttrsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stack_v1_rack_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteRackAttrsRequest) GetZone() string {
	if x != nil {
		if x.xxx_hidden_Zone != nil {
			return *x.xxx_hidden_Zone
		}
		return ""
	}
	return ""
}

func (x *DeleteRackAttrsRequest) GetRack() string {
	if x != nil {
		if x.xxx_hidden_Rack != nil {
			return *x.xxx_hidden_Rack
		}
		return ""
	}
	return ""
}

func (x *DeleteRackAttrsRequest) GetName() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Attr.(*deleteRackAttrsRequest_Name); ok {
			return x.Name
		}
	}
	return ""
}

func (x *DeleteRackAttrsRequest) GetGlob() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Attr.(*deleteRackAttrsRequest_Glob); ok {
			return x.Glob
		}
	}
	return ""
}

func (x *DeleteRackAttrsRequest) SetZone(v string) {
	x.xxx_hidden_Zone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *DeleteRackAttrsRequest) SetRack(v string) {
	x.xxx_hidden_Rack = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *DeleteRackAttrsRequest) SetName(v string) {
	x.xxx_hidden_Attr = &deleteRackAttrsRequest_Name{v}
}

func (x *DeleteRackAttrsRequest) SetGlob(v string) {
	x.xxx_hidden_Attr = &deleteRackAttrsRequest_Glob{v}
}

func (x *DeleteRackAttrsRequest) HasZone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeleteRackAttrsRequest) HasRack() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeleteRackAttrsRequest) HasAttr() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Attr != nil
}

func (x *DeleteRackAttrsRequest) HasName() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Attr.(*deleteRackAttrsRequest_Name)
	return ok
}

func (x *DeleteRackAttrsRequest) HasGlob() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Attr.(*deleteRackAttrsRequest_Glob)
	return ok
}

func (x *DeleteRackAttrsRequest) ClearZone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Zone = nil
}

func (x *DeleteRackAttrsRequest) ClearRack() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Rack = nil
}

func (x *DeleteRackAttrsRequest) ClearAttr() {
	x.xxx_hidden_Attr = nil
}

func (x *DeleteRackAttrsRequest) ClearName() {
	if _, ok := x.xxx_hidden_Attr.(*deleteRackAttrsRequest_Name); ok {
		x.xxx_hidden_Attr = nil
	}
}

func (x *DeleteRackAttrsRequest) ClearGlob() {
	if _, ok := x.xxx_hidden_Attr.(*deleteRackAttrsRequest_Glob); ok {
		x.xxx_hidden_Attr = nil
	}
}

const DeleteRackAttrsRequest_Attr_not_set_case case_DeleteRackAttrsRequest_Attr = 0
const DeleteRackAttrsRequest_Name_case case_DeleteRackAttrsRequest_Attr = 3
const DeleteRackAttrsRequest_Glob_case case_DeleteRackAttrsRequest_Attr = 4

func (x *DeleteRackAttrsRequest) WhichAttr() case_DeleteRackAttrsRequest_Attr {
	if x == nil {
		return DeleteRackAttrsRequest_Attr_not_set_case
	}
	switch x.xxx_hidden_Attr.(type) {
	case *deleteRackAttrsRequest_Name:
		return DeleteRackAttrsRequest_Name_case
	case *deleteRackAttrsRequest_Glob:
		return DeleteRackAttrsRequest_Glob_case
	default:
		return DeleteRackAttrsRequest_Attr_not_set_case
	}
}

type DeleteRackAttrsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Zone *string
	Rack *string
	// Fields of oneof xxx_hidden_Attr:
	Name *string
	Glob *string
	// -- end of xxx_hidden_Attr
}

func (b0 DeleteRackAttrsRequest_builder) Build() *DeleteRackAttrsRequest {
	m0 := &DeleteRackAttrsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Zone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Zone = b.Zone
	}
	if b.Rack != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Rack = b.Rack
	}
	if b.Name != nil {
		x.xxx_hidden_Attr = &deleteRackAttrsRequest_Name{*b.Name}
	}
	if b.Glob != nil {
		x.xxx_hidden_Attr = &deleteRackAttrsRequest_Glob{*b.Glob}
	}
	return m0
}

type case_DeleteRackAttrsRequest_Attr protoreflect.FieldNumber

func (x case_DeleteRackAttrsRequest_Attr) String() string {
	md := file_proto_stack_v1_rack_proto_msgTypes[9].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isDeleteRackAttrsRequest_Attr interface {
	isDeleteRackAttrsRequest_Attr()
}

type deleteRackAttrsRequest_Name struct {
	Name string `protobuf:"bytes,3,opt,name=name,oneof"`
}

type deleteRackAttrsRequest_Glob struct {
	Glob string `protobuf:"bytes,4,opt,name=glob,oneof"`
}

func (*deleteRackAttrsRequest_Name) isDeleteRackAttrsRequest_Attr() {}

func (*deleteRackAttrsRequest_Glob) isDeleteRackAttrsRequest_Attr() {}

type UpdateRackRequest_Fields struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateRackRequest_Fields) Reset() {
	*x = UpdateRackRequest_Fields{}
	mi := &file_proto_stack_v1_rack_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRackRequest_Fields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRackRequest_Fields) ProtoMessage() {}

func (x *UpdateRackRequest_Fields) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stack_v1_rack_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateRackRequest_Fields) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateRackRequest_Fields) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *UpdateRackRequest_Fields) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateRackRequest_Fields) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type UpdateRackRequest_Fields_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
}

func (b0 UpdateRackRequest_Fields_builder) Build() *UpdateRackRequest_Fields {
	m0 := &UpdateRackRequest_Fields{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type UpdateRackAttrRequest_Fields struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	xxx_hidden_Value       *string                `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	xxx_hidden_Protected   bool                   `protobuf:"varint,3,opt,name=protected" json:"protected,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateRackAttrRequest_Fields) Reset() {
	*x = UpdateRackAttrRequest_Fields{}
	mi := &file_proto_stack_v1_rack_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRackAttrRequest_Fields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRackAttrRequest_Fields) ProtoMessage() {}

func (x *UpdateRackAttrRequest_Fields) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stack_v1_rack_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateRackAttrRequest_Fields) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *UpdateRackAttrRequest_Fields) GetValue() string {
	if x != nil {
		if x.xxx_hidden_Value != nil {
			return *x.xxx_hidden_Value
		}
		return ""
	}
	return ""
}

func (x *UpdateRackAttrRequest_Fields) GetProtected() bool {
	if x != nil {
		return x.xxx_hidden_Protected
	}
	return false
}

func (x *UpdateRackAttrRequest_Fields) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *UpdateRackAttrRequest_Fields) SetValue(v string) {
	x.xxx_hidden_Value = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *UpdateRackAttrRequest_Fields) SetProtected(v bool) {
	x.xxx_hidden_Protected = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *UpdateRackAttrRequest_Fields) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateRackAttrRequest_Fields) HasValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateRackAttrRequest_Fields) HasProtected() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateRackAttrRequest_Fields) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *UpdateRackAttrRequest_Fields) ClearValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Value = nil
}

func (x *UpdateRackAttrRequest_Fields) ClearProtected() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Protected = false
}

type UpdateRackAttrRequest_Fields_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name      *string
	Value     *string
	Protected *bool
}

func (b0 UpdateRackAttrRequest_Fields_builder) Build() *UpdateRackAttrRequest_Fields {
	m0 := &UpdateRackAttrRequest_Fields{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Value = b.Value
	}
	if b.Protected != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Protected = *b.Protected
	}
	return m0
}

var File_proto_stack_v1_rack_proto protoreflect.FileDescriptor

var file_proto_stack_v1_rack_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x1a, 0x21, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x5f,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x10, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a,
	0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x67, 0x6c, 0x6f,
	0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x67, 0x6c, 0x6f, 0x62, 0x42,
	0x06, 0x0a, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x22, 0x3b, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x1a, 0x1c, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x63, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x67, 0x6c, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x67, 0x6c, 0x6f, 0x62, 0x42, 0x06, 0x0a, 0x04, 0x72, 0x61, 0x63, 0x6b,
	0x22, 0x53, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x63, 0x6b, 0x41, 0x74,
	0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x63,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x64, 0x52, 0x61, 0x63,
	0x6b, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x67,
	0x6c, 0x6f, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x67, 0x6c, 0x6f,
	0x62, 0x42, 0x06, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x61, 0x63, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x22, 0xeb, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61,
	0x63, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x63, 0x6b, 0x41, 0x74, 0x74, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a,
	0x50, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x22, 0x74, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x63, 0x6b, 0x41,
	0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x61, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x67, 0x6c, 0x6f,
	0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x67, 0x6c, 0x6f, 0x62, 0x42,
	0x06, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x42, 0x3a, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x64, 0x6f, 0x62, 0x69, 0x74, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x2f, 0x76, 0x31, 0x3b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x76, 0x31, 0x92, 0x03, 0x05, 0xd2, 0x3e,
	0x02, 0x10, 0x03, 0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
}

var file_proto_stack_v1_rack_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_stack_v1_rack_proto_goTypes = []any{
	(*CreateRackRequest)(nil),            // 0: proto.stack.v1.CreateRackRequest
	(*ReadRacksRequest)(nil),             // 1: proto.stack.v1.ReadRacksRequest
	(*ReadRacksResponse)(nil),            // 2: proto.stack.v1.ReadRacksResponse
	(*UpdateRackRequest)(nil),            // 3: proto.stack.v1.UpdateRackRequest
	(*DeleteRacksRequest)(nil),           // 4: proto.stack.v1.DeleteRacksRequest
	(*CreateRackAttrRequest)(nil),        // 5: proto.stack.v1.CreateRackAttrRequest
	(*ReadRackAttrsRequest)(nil),         // 6: proto.stack.v1.ReadRackAttrsRequest
	(*ReadRackAttrsResponse)(nil),        // 7: proto.stack.v1.ReadRackAttrsResponse
	(*UpdateRackAttrRequest)(nil),        // 8: proto.stack.v1.UpdateRackAttrRequest
	(*DeleteRackAttrsRequest)(nil),       // 9: proto.stack.v1.DeleteRackAttrsRequest
	(*UpdateRackRequest_Fields)(nil),     // 10: proto.stack.v1.UpdateRackRequest.Fields
	(*UpdateRackAttrRequest_Fields)(nil), // 11: proto.stack.v1.UpdateRackAttrRequest.Fields
}
var file_proto_stack_v1_rack_proto_depIdxs = []int32{
	10, // 0: proto.stack.v1.UpdateRackRequest.fields:type_name -> proto.stack.v1.UpdateRackRequest.Fields
	11, // 1: proto.stack.v1.UpdateRackAttrRequest.fields:type_name -> proto.stack.v1.UpdateRackAttrRequest.Fields
	2,  // [2:2] is the sub-list for method output_type
	2,  // [2:2] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_proto_stack_v1_rack_proto_init() }
func file_proto_stack_v1_rack_proto_init() {
	if File_proto_stack_v1_rack_proto != nil {
		return
	}
	file_proto_stack_v1_rack_proto_msgTypes[1].OneofWrappers = []any{
		(*readRacksRequest_Name)(nil),
		(*readRacksRequest_Glob)(nil),
	}
	file_proto_stack_v1_rack_proto_msgTypes[4].OneofWrappers = []any{
		(*deleteRacksRequest_Name)(nil),
		(*deleteRacksRequest_Glob)(nil),
	}
	file_proto_stack_v1_rack_proto_msgTypes[6].OneofWrappers = []any{
		(*readRackAttrsRequest_Name)(nil),
		(*readRackAttrsRequest_Glob)(nil),
	}
	file_proto_stack_v1_rack_proto_msgTypes[9].OneofWrappers = []any{
		(*deleteRackAttrsRequest_Name)(nil),
		(*deleteRackAttrsRequest_Glob)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_stack_v1_rack_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_stack_v1_rack_proto_goTypes,
		DependencyIndexes: file_proto_stack_v1_rack_proto_depIdxs,
		MessageInfos:      file_proto_stack_v1_rack_proto_msgTypes,
	}.Build()
	File_proto_stack_v1_rack_proto = out.File
	file_proto_stack_v1_rack_proto_rawDesc = nil
	file_proto_stack_v1_rack_proto_goTypes = nil
	file_proto_stack_v1_rack_proto_depIdxs = nil
}
